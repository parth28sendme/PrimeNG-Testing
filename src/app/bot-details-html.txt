<p-toast position="top-center"></p-toast>
<div class="content-page" >
  <div class="content">
    <div class="container-fluid">
      <div class="row">
        <div class="col-md-12">
          <div class="page-title-box">
            <h5 class="text-primary">
              <ol class="breadcrumb m-0 p-0 pt-0">
                <li class="breadcrumb-item w-100" style="font-size: 1.4rem; font-weight: 600;display: inline-flex;">
                  
                  <div class="">
                  Traffic Quality Center <i class="pi pi-info-circle" style="color: #2F80ED;"
                   pTooltip="Explore detailed bot detection data, traffic health analytics, and manage all your bot prevention settings."
                    tooltipPosition="top"></i>
                  </div>

                  <div class="flex-grow-1 d-flex justify-content-between h-100 " >
                <!-- Top Left Button Switch -->
                   <div class="d-inline-flex border overflow-hidden ml-3 " style="border-radius: 7px; height: 2.1rem; width: 15rem">
                  <!-- Insights Button -->
                  <button class="btn p-1 border-0 fw-bold  h-100" (click)="InsightsChange(1)" style="width: 40%; font-weight: 600;font-size: 50%;"
                  [ngStyle]="selectedInsights ? { backgroundColor: '#2F80ED', color: 'white', borderRadius: '7px 0 0 7px'  } :  { backgroundColor: 'white', color: '#4B5563', borderRadius: '7px 0 0 7px' }">
                      Analytics
                  </button>

                  <!-- 24-Hour Traffic Feed Button -->
                  <button class="btn p-1 border-0 fw-semibold  h-100" (click)="InsightsChange(0)" style="width: 60%;font-weight: 600; font-size: 50%;"
                  [ngStyle]="!selectedInsights ? { backgroundColor: '#2F80ED', color: 'white', borderRadius: '0px 7px 7px 0px'  } :  { backgroundColor: 'white', color: '#4B5563', borderRadius: '0px 7px 7px 0px' }">
                      24-Hour Traffic Feed
                  </button>
                  </div>
  

                <!-- Top Right Button Switch -->
                   <div class="d-inline-flex overflow-hidden ml-3 " style="border-radius: 5px; height: 1.98rem; width: 16rem">
                  <!-- Watch Tutorial Button -->
                  <button class="btn p-1 border-0 fw-semibold w-50 h-110"(click)="TutorialChange(1)"
                  [ngStyle]="{ backgroundColor: 'white', color: '#2F80ED', fontWeight: '600'} ">
                  <span class="mr-1 mt-3" style="font-size: 0.7rem;">
                    <i  class="fas fa-play-circle"></i></span>  Watch Tutorial
                  </button>

                  <!-- Setup Botstop Button -->
                  <button class="btn p-1 border-0 fw-semibold w-50 h-100" (click)="BotsSettingChange(1)"
                  [ngStyle]="{ backgroundColor: '#2F80ED', color: 'white', borderRadius: '5px',fontWeight: '600'}">
                   <span class="mr-1 mt-3" style="font-size: 0.5rem;">
                    <i style="font-size: 0.7rem;" class="pi pi-cog"></i></span> Setup Bot Stop  </button>

                  </div>
                  </div>
                </li>
              </ol>
            </h5>
          </div>
        </div>

      <div class="col-md-12 ">
    <!--      <div class="px-2 py-2 mb-2 text-nowrap"
          style="font-size: 13px; background-color: #e9f7fe; border-left: 4px solid #17a2b8; border-radius: 6px; color: #0c5460; width: max-content;">
          Updated every <b>30 minutes to 1 hour</b> to ensure real-time monitoring.</div> -->
          <div class="row">
            <div class="col-md-12">
              <nav class="navbar p-0 advancedSearch" >
                <ul class="nav nav-pills">
                  <li *ngIf="selectedInsights" class="nav-item-advancedSearch">
                   <p-calendar [monthNavigator]="true" [yearNavigator]="true" yearRange="2000:2050"
                      [(ngModel)]="_SelectedDate" [dateFormat]="'mm/dd/yy'" [placeholder]="'Select Date'"
                      class="w-100" [showButtonBar]="true" selectionMode="range" appendTo="body"></p-calendar>
                  </li>
                  <li *ngIf="!selectedInsights" class="nav-item-advancedSearch">
                 <p-calendar [monthNavigator]="true" [yearNavigator]="true" yearRange="2000:2050"
                       [dateFormat]="'mm/dd/yy'" [placeholder]="'Last 24 hours'"
                    [disabled]="true"  class="w-100" [showButtonBar]="true" selectionMode="range" appendTo="body"></p-calendar>
                  </li>
                  @if(RoleId != _RoleType.Networks){
                  @if(RoleId == _RoleType.NetworksMainManagers
                  || RoleId == _RoleType.NetworksSubManagers
                  || RoleId == _RoleType.TrafficSourcesManagers
                  ){
                  <li class="nav-item-advancedSearch">
                    <p-multiSelect [options]="__NetworkGroups" [(ngModel)]="_SelectedNetworkGroup" class=""
                      [resetFilterOnHide]="true" (onChange)="ChangeNetworkGroup()"
                      [placeholder]="'Agency: All'">
                    </p-multiSelect>

                  </li>}
                  <li class="nav-item-advancedSearch">
                    <p-multiSelect [options]="RoleId == _RoleType.NetworksGroups ? __NetworkGroups :__Networks" [(ngModel)]="_SelectedNetwork" [resetFilterOnHide]="true"
                      class="" [placeholder]="'Networks: All'">
                    </p-multiSelect>
                      </li>
                    }
                  <div class="nowraped-buttons-container">
                    <li class="nav-item-advancedSearch">
                      <button type="button" id="btnSearch" class="btn waves-effect waves-light applyButton"
                        (click)="btnSearch_Click()">
                      Apply
                    </button>
                  </li>
                    <li class="nav-item-advancedSearch">
                      <button type="reset" class="reset-button" (click)="btnReset_Click()">
                      <i class="pi pi-refresh " style="font-size: small;"></i>
                      <span class="reset-text">Reset All</span>
                    </button>
                  </li>
                  </div>
                </ul>
              </nav>
            </div>
          </div>
        </div>

 <ng-container *ngIf="selectedInsights">
       

       <!-- <div class="col-md-12 px-2 mt-2" style="height: 3rem;" >
          <div class="p-card w-100 d-flex align-items-center pl-4" style="background-color: #F5F9FF; border: solid 1px #2F80ED">
            <span  style="font-size: 1.5rem; color: #2F80ED;font-weight: 500">$ </span> 
            <p class="mt-2 ml-3" style="font-size: 1rem;">You've Saved<span class="ml-2"
               style="font-size: 1.5rem;color: #2F80ED;font-weight: 500;" >{{savedAmount | currency:'USD':'symbol':'1.0-2'}} </span> with BotStop </p>
          </div>
        </div> -->

     <div class="container-fluid mt-4">
        <div class="p-card px-3 pb-3 pt-2" style="border-radius: 15px;">
    
          <div class="col-md-12 px-2 mt-2 d-flex justify-content-center align-items-center" 
            *ngIf="IsLoading" style="height: 28rem;">
              <div class="spinner"> </div>
          </div>

          <div *ngIf="!IsLoading" >
          <!-- Header Section -->
          <div class="d-flex flex-wrap justify-content-between align-items-start">
            <div class="mb-2">
            <div>
             <h3 class="fw-semibold">Traffic Health Monitor   
             <i class=" ml-1" style="color: #2F80ED;" [ngClass]="showScroll ? 'pi pi-chevron-up' : 'pi pi-info-circle'"
              pTooltip="Clicking a legend item will isolate its data, temporarily hiding other categories for a focused view" tooltipPosition="top"></i> </h3>
            </div> 
              <p class="mb-0">Click on a Legend to see its Data</p>
            </div>
            <div>
              <div class="px-3 py-2 small text-nowrap" style="border-left: 4px solid #FA6400; background-color: #FFF4ED; color: #FA6400; border-radius: 5px;">
                Updated every <b>30 minutes</b> 
              </div>
            </div>
          </div>

          <!-- Main Row with Alignment Fix -->
          <div class="row align-items-start">
            
            <!-- Left Column: Activity Cards -->
            <div class="col-12 col-sm-12 col-md-4 d-flex flex-column gap-2">
              <!-- Card 1 -->
              <div class="p-1" style="cursor: pointer;">
                <div class="p-card w-100 h-100 d-flex justify-content-between align-items-center px-2 py-2"
                  (click)="ColourTheme(1)"
                  [ngStyle]="selectedId == 1 ? {backgroundColor: selectedBackgroudColour , border: selectedBorder} : null">
                  <div class="d-flex align-items-center">
                    <div class="me-2" style="width: 16px; height: 4px; border-radius: 2px; background-color: #FA6400"></div>
                    <p class="mb-0 fw-medium pl-2" style="font-size: 0.95rem;">Malicious</p>
                  </div>
                   <div class="d-flex ml-2">
                        <p style="font-size: 1.1rem; font-weight: 700; color: #FA6400;" >{{ __TotalCounts?.Malicious != null ? (__TotalCounts.Malicious | number) : 0 }}
</p>
                        <p class="ml-1" style="font-size: 0.5rem; font-weight: 400;">{{ percentages?.Malicious }} % of Total</p>
                    </div>


                </div>
              </div>

              <!-- Card 2 -->
              <div class="p-1" style="cursor: pointer;">
                <div class="p-card w-100 h-100 d-flex justify-content-between align-items-center px-2 py-2"
                  (click)="ColourTheme(2)"
                  [ngStyle]="selectedId == 2 ? {backgroundColor: selectedBackgroudColour , border: selectedBorder} : null">
                  <div class="d-flex align-items-center">
                    <div class="me-2" style="width: 16px; height: 4px; border-radius: 2px; background-color: #28C76F"></div>
                    <p class="mb-0 fw-medium pl-2" style="font-size: 0.95rem;">Friendly</p>
                  </div>
                   <div class="d-flex ml-2">
                        <p style="font-size: 1.1rem; font-weight: 700; color: #28C76F;" >{{ __TotalCounts?.Friendly != null ? (__TotalCounts?.Friendly | number) : 0 }}</p>
                        <p class="ml-1" style="font-size: 0.5rem; font-weight: 400;">{{ percentages?.Friendly }} % of Total</p>
                    </div>

                </div>
              </div>

              <!-- Card 3 -->
              <div class="p-1" style="cursor: pointer;">
                <div class="p-card w-100 h-100 d-flex justify-content-between align-items-center px-2 py-2"
                  (click)="ColourTheme(3)"
                  [ngStyle]="selectedId == 3 ? {backgroundColor: selectedBackgroudColour , border: selectedBorder} : null">
                  <div class="d-flex align-items-center">
                    <div class="me-2" style="width: 16px; height: 4px; border-radius: 2px; background-color: #A855F7"></div>
                    <p class="mb-0 fw-medium pl-2" style="font-size: 0.95rem;">Human</p>
                  </div>
                   <div class="d-flex ml-2">
                        <p style="font-size: 1.1rem; font-weight: 700; color: #A855F7;" >{{ __TotalCounts?.Human != null ? (__TotalCounts?.Human | number) : 0 }}</p>
                        <p class="ml-1" style="font-size: 0.5rem; font-weight: 400;">{{ percentages?.Human }} % of Total</p>
                    </div>
                </div>
              </div>

              <!-- Card 4 -->
              <div class="p-1" style="cursor: pointer;">
                <div class="p-card w-100 h-100 d-flex justify-content-between align-items-center px-2 py-2"
                  (click)="ColourTheme(4)"
                  [ngStyle]="selectedId == 4 ? {backgroundColor: selectedBackgroudColour , border: selectedBorder} : null">
                  <div class="d-flex align-items-center">
                    <div class="me-2" style="width: 16px; height: 4px; border-radius: 2px; background-color: #2F80ED"></div>
                    <p class="mb-0 fw-medium pl-2" style="font-size: 0.95rem;">Total</p>
                  </div>
                  <div class="d-flex ml-2">
                      <p style="font-size: 1.1rem; font-weight: 700; color: #2F80ED;" >{{ __TotalCounts?.total != null ? (__TotalCounts?.total | number) : 0 }}</p>
                      <p class="ml-1" style="font-size: 0.5rem; font-weight: 400;">{{ percentages?.total | number:'1.0-0' }} % of Total</p>
                  </div>

                </div>
              </div>
            </div>

            <!-- Right Column: Chart -->
            <div class="col-12 col-sm-12 col-md-8 ">
              <div *ngIf="IsLoading" class="spinner"></div>
              <div class="p-card px-3 pt-2  h-100">
                  <h5 class="fw-semibold mb-1" [ngStyle]="{ color: selectedColour }">{{selectedHeading}} Activity</h5>
                  <p style="font-size: 1rem;" >{{(seleactedHeadingValue| number)}} 
                    <!-- <span class="small text-muted ml-1"> {{selectedHeadingValuePercent | number:'1.0-1' }}%</span> -->
                  </p>

                <div>
                  <p-chart
                    *ngIf="!IsLoading && __FinalChartCounts?.data?.datasets?.length > 0"
                    type="line"
                    [data]="__FinalChartCounts.data"
                    [options]="__FinalChartCounts.options"
                    styleClass="w-100"
                    height="15rem">
                  </p-chart>
                </div>
              </div>
            </div>
          </div>
          </div>
          
        </div>
      </div>


        



      <div class="col-md-12 px-2 mt-2">
       <div class="card  p-3" style="border: solid 2px ; border-radius: 20px;" [ngStyle]="{borderColor : selectedBorderColour}">

                
        <div class="d-inline-flex overflow-hidden border mb-2" style="border-radius: 7px; height: 2rem; width: 20rem;">
            <!-- Active Button -->
            <button class="btn h-100 w-50 border-0 fw-semibold" (click)="tableChange('Activity')" style="font-weight: 600; font-size: 100%;"
            [ngStyle]="selectedTable == 'Activity' ? { backgroundColor: '#2F80ED', color: 'white', borderRadius: '7px 0 0 7px'  } :  { backgroundColor: 'white', color: '#4B5563', borderRadius: '10px 0 0 10px' }">
               Traffic Activity Log
            </button>

            <!-- Inactive Button -->
            <button class="btn h-100 w-50 border-0 fw-semibold " (click)="tableChange('Exclusives')" style="font-weight: 600; font-size: 100%"
            [ngStyle]="selectedTable == 'Exclusives' ? { backgroundColor: '#2F80ED', color: 'white', } :  { backgroundColor: 'white', color: '#4B5563', } ">
                Real Time Block Lists
            </button>
            </div>
       
         <!-- Activity Table -->
          <ng-container *ngIf="selectedTable == 'Activity'">
              <h4 class="fw-bold mb-3 ml-1" style="font-weight: 600;"  [ngStyle]="{color : selectedColour}" >{{selectedHeading}} Activity</h4>
        
            <p-table #dt [value]="__BotVisitsData" dataKey="id" [rowHover]="true" [rows]="10"
              [rowsPerPageOptions]="[10,30,50]" columnResizeMode="expand" [loading]="IsLoading" [scrollable]="true"
              scrollHeight="500px" [resizableColumns]="true" [rowHover]="true" [tableStyle]="{'min-width': '50rem'}"
              [showCurrentPageReport]="true" styleClass="p-datatable-striped" [paginator]="true"
              currentPageReportTemplate="Showing {first} to {last} of {totalRecords} entries">

              <!-- Table Header -->
              <ng-template pTemplate="header">
                <tr class="text-center text-nowrap">
  
                  <th style="text-align: start;" pSortableColumn="bot.type">
                    <div class="flex justify-content-between pl-3">Bot
                        <p-sortIcon field="bot.type"></p-sortIcon>
                    </div>
                  </th>
        <!--          <th pSortableColumn="ip">
                    <div class="flex justify-content-between">IP Address</div>
                  </th> -->
                  <th style="text-align: start;"  pSortableColumn="url">
                    <div class="flex justify-content-between">Website
                         <p-sortIcon field="url"></p-sortIcon>
                    </div>
                  </th>
                  <th pSortableColumn="time">
                    <div class="flex justify-content-between">Detected On
                         <p-sortIcon field="time"></p-sortIcon>
                    </div>
                  </th>
                  <th >
                    <div class="flex justify-content-between">Time
                      
                    </div>
                  </th>
                <!--  <th pSortableColumn="bot.result">
                    <div class="flex justify-content-between">Type</div>
                  </th> -->
                </tr>

                <!-- Filter Row 
                <tr class="text-center text-nowrap">
                  <th>
                    <input type="text" pInputText size="50"
                      (input)="dt.filter($event.target.value, 'bot.type', 'contains')">
                  </th>
                  <th>
                    <input type="text" pInputText size="50" (input)="dt.filter($event.target.value, 'ip', 'contains')">
                  </th> 
                  <th>
                    <input type="text" pInputText size="50" (input)="dt.filter($event.target.value, 'url', 'contains')">
                  </th>
                  <th>
                    <input type="text" pInputText size="50"
                      (input)="dt.filter($event.target.value, 'requestId', 'contains')">
                  </th>
                  <th>
                    <input type="text" pInputText size="50"
                      (input)="dt.filter($event.target.value, 'time', 'contains')">
                  </th>
                  <th>
                    <input type="text" pInputText size="50"
                      (input)="dt.filter($event.target.value, 'bot.result', 'contains')">
                  </th>
                </tr> -->
              </ng-template>

              <!-- Table Body -->
              <ng-template pTemplate="body" let-data>
                <tr class="p-selectable-row">
        
                  <td style="text-align: start; max-width: 12vh;" > <i class="pi pi-ellipsis-v mr-2 pr-1 pl-1" (click)="ViewDetails(data)"  
                    style="color: #2F80ED; font-size: 1rem; font-weight: 800;"></i>{{ data.bot?.type }}</td>

              <!--   <td>{{ data.ip }}</td> --> 
                  <td style="text-align: start; max-width: 16vh;" >
                    <a [href]="data.url" target="_blank" class="text-decoration-none">
                      <i class="bi bi-link-45deg text-info"></i> {{ data.url }}
                    </a>
                  </td>
                  <td>{{ data.time  | date: 'yyyy-MM-dd' }}</td>
                  <td>{{ data.time |date: 'HH:mm' }}</td>
             <!--   <td>
                  <span
                    [ngStyle]="getStatusStyle(data.bot?.result)"
                    style="padding: 4px 12px; border-radius: 8px; font-weight: 600; font-size: 0.9rem;">
                    {{ data.bot?.result || 'N/A' }}
                  </span>
                </td> -->

                </tr>
              </ng-template>

              <!-- Empty Message -->
              <ng-template pTemplate="emptymessage">
                <tr>
                  <td colspan="7">No records found.</td>
                </tr>
              </ng-template>
              <ng-template pTemplate="paginatorleft" let-state>
                <h5 class="pl-1">{{state.totalRecords}} Logs</h5>
              </ng-template>

            </p-table>
            </ng-container>


          <ng-container *ngIf="selectedTable == 'Exclusives'">

        <div class="d-inline-flex justify-content-between overflow-hidden mb-3 " style="height: 1.98rem">
          <div class="d-inline-flex"> <!--Left Side Social Media Buttons-->
                <!-- Google Ads -->
                <button class="btn border px-3 py-2 d-flex align-items-center" style="border-radius: 10px 0px 0px 10px;"
                  [ngStyle]="selectedPlatform === 'google' 
                    ? { backgroundColor: '#2F80ED', color: 'white' } 
                    : { backgroundColor: 'white' }"
                  (click)="selectPlatform('google')">
                  <img src="assets/icons/Adwords-Icon.svg" width="20" height="18"
                      [style.filter]="selectedPlatform === 'google' ? 'brightness(0) invert(1)' : 'none'" />
                     <span class="ml-1">{{ selectedPlatform === 'google' ?  'Google Ads' : null}}</span>
                </button>

                <!-- Meta -->
                <button class="btn border px-3 py-2 d-flex align-items-center"
                  [ngStyle]="selectedPlatform === 'meta' 
                    ? { backgroundColor: '#2F80ED', color: 'white' } 
                    : { backgroundColor: 'white' }"
                  (click)="selectPlatform('meta')">
                  <img src="assets/icons/Meta-Icon.svg" width="20" height="18"
                      [style.filter]="selectedPlatform === 'meta' ? 'brightness(0) invert(1)' : 'none'" />
                     <span class="ml-1">{{ selectedPlatform === 'meta' ? 'Meta Audience' : null}}</span> 
                </button>

                <!-- TikTok -->
                <button class="btn border px-3 py-2 d-flex align-items-center" style="border-radius: 0px 10px 10px 0px;"
                  [ngStyle]="selectedPlatform === 'tiktok' 
                    ? { backgroundColor: '#2F80ED', color: 'white' } 
                    : { backgroundColor: 'white' }"
                  (click)="selectPlatform('tiktok')">
                  <img src="assets/icons/Tiktok-Icon.svg" width="20" height="18"
                      [style.filter]="selectedPlatform === 'tiktok' ? 'brightness(0) invert(1)' : 'none'" />
                       <span class="ml-1">{{ selectedPlatform === 'tiktok' ? 'Tiktok': null}}</span>
                </button>
                <i *ngIf="selectedPlatform != 'tiktok'" class="pi pi-info-circle ml-2 mt-1" style="color: #2F80ED"
                 pTooltip="This section shows the custom audiences that are currently excluded from seeing your {{selectedPlatform}} ad campaigns. By excluding these audiences, you ensure your ads are not 
                  served to identified non-human traffic or other unwanted segments" tooltipPosition="top"></i>
                 </div>

          <div class="d-inline-flex justify-content-end"><!--Right Side Filter Buttons-->
            <!--
                    <button class="btn  mr-2 fw-semibold"  (click)="FilterDisplay()"
                   [ngStyle]="{ backgroundColor: 'white', color: '#2F80ED', borderRadius: '7px 7px 7px 7px', border : '1px solid #2F80ED'} ">
                  <span class="mt-3" style="font-size: 1rem;"><i class="pi pi-filter mr-2 "></i>Filter</span>
                  </button>

                    <button class="btn  border rounded fw-semibold"  
                   [ngStyle]="{ backgroundColor: 'white', borderRadius: '7px 7px 7px 7px', color: 'inherit'} ">
                  <span class=" mt-3" style="font-size: 1rem;"><i class="pi pi-filter-slash mr-2" ></i>Clear</span>
                  </button> -->
          </div>
        </div>


            <ng-container *ngIf="selectedPlatform == 'meta'">
                <p-table #dts [value]="_FacebookList" dataKey="fbad_id" [rowHover]="true" [rows]="10"
                  responsiveLayout="scroll" styleClass="p-datatable-striped" [scrollable]="true" scrollHeight="500px"
                  [tableStyle]="{'min-width': '50rem'}" [showCurrentPageReport]="true" [loading]="ExclusiveLoading"
                  [rowsPerPageOptions]="[10, 30, 50]" [paginator]="true"
                  currentPageReportTemplate="Showing {first} to {last} of {totalRecords} entries">
                  <ng-template pTemplate="header">
                    <tr class="text-center text-nowrap">
                      <th pSortableColumn="AdsName" [pSortableColumnDisabled]="false" class="text-nowrap overflow-hidden"
                        style="min-width: 20rem">
                        <div class="flex justify-content-between">
                          Ad Name <p-sortIcon field="AdsName"></p-sortIcon>
                        </div>
                      </th>
                      <th pSortableColumn="fbad_id" [pSortableColumnDisabled]="false" class="text-nowrap overflow-hidden"
                        style="min-width: 20rem">
                        <div class="flex justify-content-between">
                          Ad ID <p-sortIcon field="fbad_id"></p-sortIcon>
                        </div>
                      </th>
                      <th pSortableColumn="Traffic" [pSortableColumnDisabled]="false" class="text-nowrap overflow-hidden"
                        style="min-width: 20rem">
                        <div class="flex justify-content-between">
                          Clicks <p-sortIcon field="Traffic"></p-sortIcon>
                        </div>
                      </th>
                      <th pSortableColumn="Bots" [pSortableColumnDisabled]="false" class="text-nowrap overflow-hidden"
                        style="min-width: 20rem">
                        <div class="flex justify-content-between">
                          Bots <p-sortIcon field="Bots"></p-sortIcon>
                        </div>
                      </th>
                    </tr>
                  </ng-template>
                  <ng-template pTemplate="body" let-data let-expanded="expanded">
                    <tr class="p-selectable-row">
                      <td>
                        {{ data.AdsName }}
                      </td>
                      <td>
                        {{ data.fbad_id }}
                      </td>
                      <td>
                        {{ data.Traffic }}
                      </td>
                      <td>
                        {{ data.Bots }}
                      </td>
                    </tr>
                  </ng-template>
                  <ng-template pTemplate="emptymessage" let-state>
                    <tr class="text-center align-middle">
                      <td colspan="4">No records found.</td>
                    </tr>
                  </ng-template>
                  <ng-template pTemplate="paginatorleft" let-state>
                    <h5 class="pl-1">{{state.totalRecords}} Logs</h5>
                  </ng-template>
                </p-table>
            </ng-container>

            <ng-container *ngIf="selectedPlatform == 'google'">
                <p-table #dt [value]="_GoogleList" dataKey="clientip" [rowHover]="true" [rows]="10"
                  styleClass="p-datatable-striped" [scrollable]="true" scrollHeight="500px"
                  [showCurrentPageReport]="true" [resizableColumns]="true" [loading]="ExclusiveLoading"
                  [rowsPerPageOptions]="[15, 30, 60]" [paginator]="true"
                  currentPageReportTemplate="Showing {first} to {last} of {totalRecords} entries">
                  <ng-template pTemplate="header">
                    <tr class="text-center text-nowrap">
                      <th pSortableColumn="clientip" [pSortableColumnDisabled]="false"
                        class="text-nowrap overflow-hidden" style="min-width: 20rem">
                        <div class="flex justify-content-between">
                          Recent IP <p-sortIcon field="clientip"></p-sortIcon>
                        </div>
                      </th>
                      <th pSortableColumn="country" [pSortableColumnDisabled]="false"
                        class="text-nowrap overflow-hidden" style="min-width: 20rem">
                        <div class="flex justify-content-between">
                          Country <p-sortIcon field="country"></p-sortIcon>
                        </div>
                      </th>
                      <th pSortableColumn="Total" [pSortableColumnDisabled]="false" class="text-nowrap overflow-hidden"
                        style="min-width: 20rem">
                        <div class="flex justify-content-between">
                          Counts <p-sortIcon field="Total"></p-sortIcon>
                        </div>
                      </th>
                    </tr>
                  </ng-template>
                  <ng-template pTemplate="body" let-data let-expanded="expanded">
                    <tr class="p-selectable-row">
                      <td>
                        {{ data.clientip }}
                      </td>
                      <td>
                        <img src="assets/images/logos/flags/{{data.country?.toLowerCase()}}.png"
                          style="width: 16px; height: 16px;" />
                        {{ data.country }}
                      </td>
                      <td>
                        {{ data.Total }}
                      </td>
                    </tr>
                  </ng-template>
                  <ng-template pTemplate="emptymessage" let-state>
                    <tr class="text-center align-middle">
                      <td colspan="3">No records found.</td>
                    </tr>
                  </ng-template>
                  <ng-template pTemplate="paginatorleft" let-state>
                    <h5 class="pl-1">{{state.totalRecords}} Logs</h5>
                  </ng-template>
                </p-table>

            </ng-container>

            <ng-container *ngIf="selectedPlatform == 'tiktok'" >
            <!--Tiktok Exclusive Table-->
            <div class="col-12 d-flex justify-content-center align-items-center h-100 ">
             <h4>No Tiktok Data available Currently</h4> 
            </div>
            </ng-container>

           </ng-container>  

        </div>
      </div>
   
      <!--Bot details p-Sidebar-->
       <p-sidebar [(visible)]="IsBotDetectionDetails" position="right" [modal]="true" [baseZIndex]="10000" styleClass="p-sidebar-md">
        <ng-container *ngIf="Datalist">
        <div class="mb-3 h-50">
              <!--            -->
      
              <div class="col-12">
                    <b>
                      <h3 class="mb-4" style="font-weight: 500; font-size: 2rem;">Bot Details</h3>
                    </b>
                 <!--   <h3 class="mt-4" style="font-weight: 600;">Details</h3> -->
                    <div class="row mt-2 mb-3">
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Bot Quality</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.bot.result | titlecase }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Website</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.url }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Detected on</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{ Datalist.time  | date: 'yyyy-MM-dd' }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Time</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{ Datalist.time |date: 'HH:mm' }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">IP Address</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.ip }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Detection Id</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.requestId }}</p>
                        </div>
                      </div>
                      
                      
                    </div>
              </div>

              <div class="col-12">
                <h3 class="mb-3" style="font-weight: 600;">Detection Response</h3>
                  <div class="p-card" style="max-width: 100%;">
                    <div class="position-relative">

                      <!-- Copy Button -->
                      <div class="d-flex justify-content-end">
                      <button class="position-absolute top-0 end-0  mt-2 mr-2 " 
                      (click)="copyToClipboard($event)" style="background-color: #2F80ED; color: white; border-radius: 8px;
                       border-color: #2F80ED; font-size: 1rem;"> 
                        <i style="font-size: 0.8; padding: 10px;" class="pi pi-copy"></i>
                      </button>
                      </div>

                      <!-- JSON Display -->
<pre class="rounded p-4 m-0"
  style="
    background-color: #f6f6f6;
    font-family: 'Courier New', monospace;
    font-size: 14px;
    line-height: 1.6;
    white-space: pre-wrap;
    word-break: break-word;
    overflow-x: hidden;
    overflow-y: hidden;
  "
  [ngStyle]="!showScroll ? { 'max-height': '300px' } : null">
  <code [innerHTML]="formattedJson"></code>
</pre>

                      <button 
                      style=" 
                        border: none; 
                        background-color: #f6f6f6; 
                        width: 100%; 
                        text-align: center; 
                        backdrop-filter: blur(5px); /* Apply blur effect around the button */
                        border-radius: 8px; /* Optional, to smooth the edges */
                      "
                      (click)="toggleScroll()">
                      <i style="color: #2F80ED;" [ngClass]="showScroll ? 'pi pi-chevron-up' : 'pi pi-chevron-down'"></i>
                    </button>

                    </div>
                  </div>
              </div>


        </div>

     

    </ng-container>
      </p-sidebar>



      <!--Filter p-Sidebar-->
           <p-sidebar [(visible)]="ExclusiveFilterDisplay" position="right" [modal]="true" [baseZIndex]="10000" styleClass="p-sidebar-md">
        <div class="d-flex flex-column justify-content-between mb-3 h-50">
      
        <div class="col-12"> <!--Filters-->
          <h4 class="ml-1" style="font-weight: 700;"><i class="pi pi-filter mr-2"> </i>Advance Filters</h4>
                    <div  class="col-12 mt-3">
                      <label class="form-label">Account Type</label><br>
                       <p-calendar [monthNavigator]="true" [yearNavigator]="true" yearRange="2000:2050" style="width: 200vh;"
                       [dateFormat]="'mm/dd/yy'" [placeholder]="'Select Date'"
                      class="w-100" [showButtonBar]="true" selectionMode="range" appendTo="body"></p-calendar>
                    </div>
                     <div  class="col-12 mt-3">
                      <label class="form-label">Account Type</label><br>
                              <p-calendar [monthNavigator]="true" [yearNavigator]="true" yearRange="2000:2050" style="width: 200vh;"
                       [dateFormat]="'mm/dd/yy'" [placeholder]="'Select Date'"
                      class="w-100" [showButtonBar]="true" selectionMode="range" appendTo="body"></p-calendar>
                    </div>
        </div>

              <div class="col-12 d-flex  justify-content-end align-items-end"><!--Apply and Clear Buttons-->
                  
                  <button class="btn px-4 mr-2 py-2 border rounded fw-semibold"  
                  [ngStyle]="{ backgroundColor: 'white', borderRadius: '7px 7px 7px 7px', color: 'inherit'} ">
                  <span class=" mt-3" style="font-size: 1rem;"><i class="pi pi-filter-slash mr-2"></i>Clear</span>
                  </button>

                  <button class="btn px-4 py-2 fw-semibold"  (click)="FilterDisplay()"
                   [ngStyle]="{ color: 'white', backgroundColor: '#2F80ED', borderRadius: '7px 7px 7px 7px', border : '1px solid #2F80ED'} ">
                  <span class=" mt-3" style="font-size: 1rem;"><i class="pi pi-filter mr-2"></i>Apply Filters</span>
                  </button>

              </div>

              </div>
           </p-sidebar>
 </ng-container>


 <ng-container *ngIf="!selectedInsights">

      <div class="col-md-12 px-2 mt-4">
            <div class="p-card px-2 pb-2 mt-2" style="border-radius: 15px ;">
                <div class="d-flex justify-content-between mt-2">
                    <div>
                        <h3 class="ml-2" style="font-weight: 650;"> 24-Hour Traffic Feed
              <i class=" ml-1" style="color: #2F80ED;" [ngClass]="showScroll ? 'pi pi-chevron-up' : 'pi pi-info-circle'"
              pTooltip="This table offers a detailed view of all traffic detection events from the last 24 hours" tooltipPosition="top"></i>
                        </h3>
                    </div>
                    <div>
                        <div class="px-2 py-2  text-nowrap" 
               style="font-size: 0.7vw;  border-left: 4px solid; width: max-content;background-color: #FFF4ED; color: #FA6400;">
                        Updated every <b>30 minutes</b></div>
                    </div>
                </div>

                <div class="row">
                  <div class="col-12 mt-3" >
                  <p-table #dt [value]="IdentificationBotVisitsData" dataKey="visitorId" [rowHover]="true" [rows]="10" [loading]="IdentificationLoading"
                    [rowsPerPageOptions]="[10,30,50]" columnResizeMode="expand" [scrollable]="true" scrollHeight="500px"
                    [resizableColumns]="true" [showCurrentPageReport]="true" styleClass="p-datatable-striped" [paginator]="true"
                    currentPageReportTemplate="Showing {first} to {last} of {totalRecords} entries">

                    <!-- Table Header -->
                    <ng-template pTemplate="header">
                      <tr class="text-center text-nowrap">
                       
                        <th pSortableColumn="visitorId">
                          Visitor ID <p-sortIcon field="visitorId"></p-sortIcon>
                        </th>
                        <th pSortableColumn="ipaddress">
                          IP Address <p-sortIcon field="ipaddress"></p-sortIcon>
                        </th>
                        <th pSortableColumn="requestId">
                          Request ID <p-sortIcon field="requestId"></p-sortIcon>
                        </th>
                        <th pSortableColumn="date">
                          Date <p-sortIcon field="date"></p-sortIcon>
                        </th>
                        <!-- <th>Actions</th> -->
                      </tr>

                      <!-- Filter Row -->
                    <!--  <tr class="text-center text-nowrap">
                        <th></th>
                        <th><input type="text" pInputText (input)="dt.filter($event.target.value, 'visitorId', 'contains')">
                        </th>
                        <th><input type="text" pInputText (input)="dt.filter($event.target.value, 'ipaddress', 'contains')">
                        </th>
                        <th><input type="text" pInputText (input)="dt.filter($event.target.value, 'requestId', 'contains')">
                        </th>
                        <th><input type="text" pInputText (input)="dt.filter($event.target.value, 'date', 'contains')"></th>
                      </tr>
                      -->
                    </ng-template>
                      


                    <!-- Table Body -->
                    <ng-template pTemplate="body" let-item let-expanded="expanded">
                      <!-- <tr class="p-selectable-row" (click)="toggleAccordion(item,$event)"> -->
                      <tr>
                    <td style="text-align: start; max-width: 12vh;" > <i class="pi pi-ellipsis-v mr-2 pr-1 pl-1"
                      (click)="viewIdentification(item)" style="color: #2F80ED; font-size: 1rem; font-weight: 800;">
                    </i>{{ item.visitorId }}</td>
                        <td>{{ item.ipaddress }}</td>
                        <td>{{ item.requestId }}</td>
                        <td>{{ item.date }}</td>
                      </tr>
                    </ng-template>

                    <!-- Empty Message -->
                    <ng-template pTemplate="emptymessage" let-state>
                      <tr class="text-center align-middle">
                        <td colspan="5">No records found.</td>
                      </tr>
                    </ng-template>
                    <ng-template pTemplate="paginatorleft" let-state>
                      <h5 class="pl-1">{{state.totalRecords}} Logs</h5>
                    </ng-template>

                  </p-table>
                  </div>
                </div>
            </div>
        </div>


              <p-sidebar [(visible)]="IdentificationDisplay" position="right" [modal]="true" [baseZIndex]="10000" styleClass="p-sidebar-md">
        <ng-container *ngIf="Datalist && IdentificationDisplay">
        <div class="mb-3 h-50">
              <!--            -->
      
              <div class="col-12">
                    <b>
                      <h3 class="mb-4" style="font-weight: 500; font-size: 2rem;">Bot Details</h3>
                    </b>
                 <!--   <h3 class="mt-4" style="font-weight: 600;">Details</h3> -->
                    <div class="row mt-2 mb-3">
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Bot Quality</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.botinfo.result | titlecase }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Website</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.browserName }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Detected on</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{ Datalist.date  | date: 'yyyy-MM-dd' }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Time</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{ Datalist.date |date: 'HH:mm' }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">IP Address</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.ipInfo.v4.address }}</p>
                        </div>
                      </div>
                       <div  class="col-12 col-sm-6">
                        <div class="form-group">
                          <label style="color: rgb(193, 191, 191); font-weight: 300;">Detection Id</label>
                          <p style="font-size: 1.1rem; font-weight: 600;">{{Datalist.requestId }}</p>
                        </div>
                      </div>
                      
                      
                    </div>
              </div>

              <div class="col-12">
                <h3 class="mb-3" style="font-weight: 600;">Detection Response</h3>
                  <div class="p-card" style="max-width: 100%;">
                    <div class="position-relative">

                      <!-- Copy Button -->
                      <div class="d-flex justify-content-end">
                      <button class="position-absolute top-0 end-0  mt-2 mr-2 " 
                      (click)="copyToClipboard($event)" style="background-color: #2F80ED; color: white; border-radius: 8px;
                       border-color: #2F80ED; font-size: 1rem;"> 
                        <i style="font-size: 0.8; padding: 10px;" class="pi pi-copy"></i>
                      </button>
                      </div>

                      <!-- JSON Display -->
<pre class="rounded p-4 m-0"
  style="
    background-color: #f6f6f6;
    font-family: 'Courier New', monospace;
    font-size: 14px;
    line-height: 1.6;
    white-space: pre-wrap;
    word-break: break-word;
    overflow-x: hidden;
    overflow-y: hidden;
  "
  [ngStyle]="!showScroll ? { 'max-height': '300px' } : null">
  <code [innerHTML]="formattedJson"></code>
</pre>

                      <button 
                      style=" 
                        border: none; 
                        background-color: #f6f6f6; 
                        width: 100%; 
                        text-align: center; 
                        backdrop-filter: blur(5px); /* Apply blur effect around the button */
                        border-radius: 8px; /* Optional, to smooth the edges */
                      "
                      (click)="toggleScroll()">
                      <i style="color: #2F80ED;" [ngClass]="showScroll ? 'pi pi-chevron-up' : 'pi pi-chevron-down'"></i>
                    </button>

                    </div>
                  </div>
              </div>


        </div>

    </ng-container>
      </p-sidebar>


        
    
 </ng-container>
    
    <!--Botstop tutorial p-dialogbox-->
           <p-dialog 
             [header]="'Bot Stop Tutorial'"  
             [modal]="true" 
             [(visible)]="selectedTutorial" 
             [style]="{ width: '60rem' }"
             [breakpoints]="{ '1199px': '75vw', '575px': '90vw' }" [maximizable]="true">
            <div class="col-12 d-flex justify-content-center align-items-center w-100" style="height: 26rem;">
            
             <iframe
              width="95%"
              height=95%
              src="https://www.youtube.com/embed/_kv2_Ekfxjk?si=yssaIxMh461VqaYi"
              frameborder="0"
              allowfullscreen>
            </iframe>


            </div>
            </p-dialog> 

            
   <!--Botstop Settings p-dialogbox-->
            <p-dialog
             [header]="'Setup Bot Stop'" 
             [modal]="true" [(visible)]="botsSettings" 
             [style]="{ width: '60rem' , height: '40rem' }"
             [breakpoints]="{ '1199px': '75vw', '575px': '90vw' }" 
             [maximizable]="true" [draggable]="false">

          <ng-container *ngIf="setupIsLoading">
            <div class="col-12 h-100 w-100">
                  <div class="spinner"></div>                         
            </div>
          </ng-container>

             <ng-container *ngIf="botsSettingsLevel == 1 && !setupIsLoading">
              <div class="col-12 d-flex flex-column justify-content-between align-items-center w-between" style="height: 100%;">
          
                   <div style="height: 80%;">
                      <p>Get ready to save money and secure your traffic! In this video we will walk
                        you through the straightforward steps to configure botstop , with every action clearly explained </p>
                        
                      <div class="d-flex justify-content-center w-100 h-100">  
                      <iframe
                      width="80%"
                      height=90%
                      src="https://www.youtube.com/embed/_kv2_Ekfxjk?si=yssaIxMh461VqaYi"
                      frameborder="0"
                      allowfullscreen>
                    </iframe>
                    </div>
                   </div>  

                <div class="d-inline-flex justify-content-between w-100 mt-3" style="border-radius: 7px; height: 1.98rem;">
                  <!-- Watch Tutorial Button -->
                   <div>
                  <button *ngIf="skiptutorial" class="p-1  fw-semibold w-10 h-110 font-style" style="border: none; font-size :1rem" (click)="BotsSettingChangeLevel(0)"
                  [ngStyle]="{ backgroundColor: 'white', color: '#808080', fontWeight: '600'}">
                    Skip Tutorial
                  </button>
                  </div>

                  <!-- Setup Botstop Button -->
                  <!-- <button class="btn p-1 border-0 fw-semibold  h-100 px-1" (click)="BotsSettingChangeLevel(2)"
                  [ngStyle]="{ backgroundColor: '#2F80ED', color: 'white', borderRadius: '7px 7px 7px 7px',fontWeight: '500'}"
                  style="font-size: 0.8rem; width:6rem ;">
                    Next </button>
                     -->
                     <button class="btn p-1 border-0 fw-semibold  h-100 px-1" 
                     (click)="BotsSettingChangeLevel(RoleId != _RoleType.Networks ? 2 : 3)"
                      [ngStyle]="{ backgroundColor: '#2F80ED', color: 'white', borderRadius: '7px 7px 7px 7px',fontWeight: '500'}"
                      style="font-size: 0.8rem; width:6rem ;">
                        Next 
                      </button>

                  </div>

            </div>
            </ng-container>

            <ng-container *ngIf="botsSettingsLevel == 2 && !setupIsLoading" >
              <div class="col-12 d-flex flex-column justify-content-between w-100" style="height: 88%;"> 
              
              <div class="col-12 d-flex flex-column">
                    <div class="d-flex justify-content-between">
                      <div class="progress-header d-flex align-items-center gap-2">
                        <div class="circular-progress progress-half">
                          <svg class="progress-ring" width="55" height="55">
                            <circle class="progress-ring-bg" r="24" cx="27.5" cy="27.5" />
                            <circle class="progress-ring-fill" r="24" cx="27.5" cy="27.5" />
                          </svg>
                          <span class="progress-text">1/2</span>
                        </div>
                        <h4 class="step-title p-2" style="color: #2F80ED; font-weight: 500;">Select Agency and Network</h4>
                      </div>
                      
                      <button class=" p-1 border-0 fw-semibold w-40 h-110 mr-1" style="font-size: 0.7;"
                      [ngStyle]="{ backgroundColor: 'white', color: '#2F80ED',} " (click)="TutorialChange(1)"> 
                      <span class="mr-1 mt-3" style="font-size: 80%;"><i  class="fas fa-play-circle"></i></span>  Watch Tutorial
                      </button>
                    </div>

                      <ul class="mt-1" style="margin-left: 0; padding-left: 1rem;">
                        <li>
                          <p>Generate custom JavaScript by selecting an agency and network.</p>
                        </li>
                      </ul>


                      <div class="row my-2">
                         @if(RoleId != _RoleType.Networks){
                            @if(RoleId == _RoleType.NetworksMainManagers
                            || RoleId == _RoleType.NetworksSubManagers
                            || RoleId == _RoleType.TrafficSourcesManagers
                            ){
                                  <div  class="col-12 col-sm-6 ">
                                      <div class="form-group">
                                        <label>Agency </label> &nbsp;&nbsp;<br>
                                          <p-dropdown
                                            [options]="__NetworkGroups"
                                            [(ngModel)]="_BotSelectedAgency"
                                            optionLabel="label" 
                                            optionValue="value"
                                            [filter]="true"
                                            filterPlaceholder="Search agency"
                                            class="custom-dropdown w-100"
                                            [placeholder]="'Agency: All'"
                                            (onChange)="ChangeAgencyGroup()">
                                          </p-dropdown>
                                      </div>
                                  </div>
                                } 
                                <div  class="col-12 col-sm-6">
                                    <div class="form-group">
                                      <label>Network </label>&nbsp;&nbsp;<br>
                                      <p-dropdown
                                          [options]="RoleId == _RoleType.NetworksGroups ? __NetworkGroups : _BotDomainList"
                                          [(ngModel)]="_BotSelectedDomain"
                                          optionLabel="label"
                                          optionValue="value"
                                          [filter]="true"
                                          filterPlaceholder="Search network"
                                          class="custom-dropdown w-100"
                                          [placeholder]="'Networks: All'">
                                        </p-dropdown>
                                    </div>
                                </div>
                              }
                          </div>
                      </div>


                 <div class="d-inline-flex justify-content-between w-100 mt-3" style="border-radius: 7px; height: 1.98rem;">
                  <!-- Watch Tutorial Button -->
                  <button class=" p-1  fw-semibold w-10 h-110" style="border: none; font-size :1rem" (click)="BotsSettingChangeLevel(0)"
                  [ngStyle]="{ backgroundColor: 'white', color: '#808080', fontWeight: '600'}">
                    Skip Tutorial
                  </button>

                    <div class="d-flex">
                      <!-- Setup Botstop Button -->
                      <button class=" p-1  fw-semibold w-10 h-110 mr-3" style="border: none; font-size :1rem" (click)="BotsSettingChangeLevel(1)"
                      [ngStyle]="{ backgroundColor: 'white', color: '#808080', fontWeight: '600'}">
                        Back
                      </button>

                      <button class="btn p-1 border-0 fw-semibold  h-100 px-1" (click)="BotsSettingChangeLevel(3)"
                      [ngStyle]="{ backgroundColor: '#2F80ED', color: 'white', borderRadius: '7px 7px 7px 7px',fontWeight: '500'}"
                      style="font-size: 0.8rem; width:6rem ;">
                        Next 
                      </button>


                    </div>
                   </div>
           

              </div>
            </ng-container>

               <ng-container *ngIf="botsSettingsLevel == 3 && !setupIsLoading">
              <div class="col-12 d-flex flex-column justify-content-between w-100" style="height: 88%;"> 
              
              <div class="col-12 d-flex flex-column">
                    <div class="d-flex justify-content-between">
                      <!-- <h4 style="color: #2F80ED; font-weight: 500;">Select Agency and Network</h4> -->
                       <div class="progress-header d-flex align-items-center gap-2">
                          <div *ngIf="RoleId != _RoleType.Networks" class="circular-progress progress-full">
                            <svg class="progress-ring" width="55" height="55">
                              <circle class="progress-ring-bg" r="24" cx="27.5" cy="27.5" />
                              <circle class="progress-ring-fill" r="24" cx="27.5" cy="27.5" />
                            </svg>
                            <span class="progress-text">2/2</span>
                          </div>
                          <h4 class="step-title p-2" style="color: #2F80ED; font-weight: 500;">Select Agency and Network</h4>
                        </div>

                      
                      <button class=" p-1 border-0 fw-semibold w-40 h-110 mr-1" style="font-size: 0.7;"
                      [ngStyle]="{ backgroundColor: 'white', color: '#2F80ED',} " (click)="TutorialChange(1)"> 
                      <span class="mr-1 mt-3" style="font-size: 80%;"><i  class="fas fa-play-circle"></i></span>  Watch Tutorial
                      </button>
                    </div>

                      <ul class="mt-1"  style="margin-left: 0; padding-left: 1rem;">
                        <li>
                          <p>Add our snippet to each page you want to use MobiBox on.</p>
                        </li>
                        <li>
                          <p>The code snippets below already include your public API key and other configuration options based on your chosen region and active integration.</p>
                        </li>
                        <li>
                          <p>Open the page where you installed MobiBox and wait a second, the script automatically runs on page load.</p>
                        </li>
                      </ul>

                  <div class="col-9">
                    <div class="d-flex justify-content-end">
                      <button class="position-absolute top-0 end-0  mt-2 mr-2 " 
                      (click)="copyToClipboardGuid()" style="background-color: #2F80ED; color: white; border-radius: 8px;
                       border-color: #2F80ED; font-size: 1rem;"> 
                        <i style="font-size: 0.8; padding: 5px;" class="pi pi-copy"></i>
                      </button>
                      </div>
                      <pre class="rounded  m-0"
                        style="
                          background-color: #f6f6f6;
                          font-family: 'Courier New', monospace;
                          font-size: 11px;
                          line-height: 1.6;
                          white-space: pre-wrap;
                          word-break: break-word;
                          overflow-x: hidden;
                          overflow-y: hidden;
                        ">
                        <code>{{ codeSnippet }}</code>
                      </pre>
                  </div>
              </div>


                 <div class="d-inline-flex justify-content-between w-100 mt-3" style="border-radius: 7px; height: 1.98rem;">
                   <!-- Watch Tutorial Button -->
                  <button class=" p-1  fw-semibold w-10 h-110" style="border: none; font-size :1rem" (click)="BotsSettingChangeLevel(0)"
                  [ngStyle]="{ backgroundColor: 'white', color: '#808080', fontWeight: '600'}">
                    Skip Tutorial
                  </button>

                    <div class="d-flex">
                      <!-- Setup Botstop Button -->
                      <button class=" p-1  fw-semibold w-10 h-110 mr-3" style="border: none; font-size :1rem" (click)="BotsSettingChangeLevel(2)"
                      [ngStyle]="{ backgroundColor: 'white', color: '#808080', fontWeight: '600'}">
                        Back
                      </button>

                      <button class="btn p-1 border-0 fw-semibold  h-100 px-1" (click)="BotsSettingChangeLevel(4)"
                      [ngStyle]="{ backgroundColor: '#2F80ED', color: 'white', borderRadius: '7px 7px 7px 7px',fontWeight: '500'}"
                      style="font-size: 0.8rem; width:6rem ;">
                        Verify 
                      </button>


                    </div>
                   </div>
           

              </div>
            </ng-container>

            </p-dialog>   

      <!--End-->
      </div>
    </div>
  </div>
</div>

<p-dialog *ngIf="verified!= undefined" [(visible)]="botstopConfirmation" modal="true" [closable]="false" [draggable]="false" [resizable]="false" [dismissableMask]="true" 
  [style]="{width: '350px'}" [contentStyle]="{'text-align': 'center'}" class="rounded-lg">

<div class="d-flex flex-column align-items-center">
  <i 
    [ngClass]="verified ? 'pi pi-check-circle' : 'pi pi-times-circle'"
    [ngStyle]="{'font-size': '4rem','color': verified ? '#2F80ED' : '#b7950b'}">
  </i>

  <h4 class="mt-3 fw-bold">
    {{ verified ? 'Verified!' : 'Verification Failed' }}
  </h4>

  <p class="text-muted mb-4">
    {{ verified ? 'Bot Stop successfully integrated' : 'Bot Stop integration failed, Check JS implementation and try again.' }}
  </p>

  <button 
    class="btn px-4 py-2 fw-semibold text-white"
    [ngStyle]="{ 'background-color': verified ? '#2F80ED' : '#b7950b' }"
    (click)="botstopConfirmation = false">
    Done
  </button>
</div>

</p-dialog>


<p-toast position="top-center"></p-toast>